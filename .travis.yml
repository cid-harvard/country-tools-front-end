language: node_js
node_js:
- stable
cache:
	directories:
	- node_modules
branches:
	only:
	- develop
	- master
	- backend
script:
	- npm run build
before_install:
	- export SERVER_USER=ubuntu
	- export APP_DIR=/home/ubuntu
	- if [ $TRAVIS_BRANCH == "develop" ] || [ $TRAVIS_BRANCH == "backend" ]; then
				export SERVER_ADDRESS=$STAGING_IP_ADDRESS;
				export ENCRYPTED_DEPLOY_KEY=./deploy_keys/staging.enc;
		elif [ $TRAVIS_BRANCH == "master" ]; then
				export SERVER_ADDRESS=$PRODUCTION_IP_ADDRESS;
				export ENCRYPTED_DEPLOY_KEY=./deploy_keys/prod_key.enc;
		fi
	# Decrypt deploy key and add to SSH keys
	- openssl aes-256-cbc -K $encrypted_ba9faf39c0a7_key -iv $encrypted_ba9faf39c0a7_iv
			-in $ENCRYPTED_DEPLOY_KEY -out deploy_key -d
	- eval "$(ssh-agent -s)"
	- chmod 600 ./deploy_key
	- echo -e "Host $SERVER_ADDRESS\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
	- ssh-add ./deploy_key
deploy:
	provider: script
	skip_cleanup: true
	script: bash ./scripts/deploy.sh
after_success:
	- ssh $SERVER_USER@$SERVER_ADDRESS "bash -s" < "sudo systemctl reload nginx"
